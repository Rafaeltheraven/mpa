#!/bin/bash

clear=False

argarray=()

for arg in "$@"
do
	if [[ "$arg" = "--"* ]]; then
		argarray+=("$arg")
	fi
done

rand() {
	# Get a list of all the albums
	if [[ "$2" = "-t" ]]; then
		tracks="$(mpc $argarray list title $1)"
		readarray -t splitted <<<"$tracks"
		size=${#splitted[@]}
		index=$(($RANDOM % $size))
		title=${splitted[$index]}
		files="$(mpc $argarray find ((title == '$title')))"
		readarray -t splitted <<<"$files"
		size=${#splitted[@]}
		index=$(($RANDOM % $size))
		file=${splitted[$index]}
		mpc $argarray add "$file"
		dump="$(mpc $argarray play)"
	else
		albums=$(mpc $argarray list album "${1}")
		# Split bu newline
		readarray -t splitted <<<"$albums"
		# Get the size
		size=${#splitted[@]}
		# Get a random index
		index=$(($RANDOM % $size))
		# Get a random album
		album=${splitted[$index]}
		if [[ $clear = True ]]; then
			mpc $argarray clear
		fi
		# Find all the tracks that belong to this album
		mpc $argarray findadd album "$album"
		# Play just to be sure
		dump="$(mpc $argarray play)"
	fi
}

radio() {
	searchArg="$1"
	if [[ "$2" = "-t" ]]; then
		rand "$searchArg" "-t"
		while [[ "" = "" ]]
		do
			rand "$searchArg" "-t"
			dump="$(mpc $argarray current --wait)"
		done
	else
		rand "$searchArg"
		while [[ "" = "" ]]
		do
			rand "$searchArg"
			prev="$(mpc $argarray -f '%albumartist% - %album%' current)"
			curr="$prev"
			while [[ "$prev" = "$curr" ]]
			do
				curr="$(mpc $argarray -f '%albumartist% - %album%' current --wait)"
			done
		done
	fi

}

next() {
	# Get a list containing the album of each track in the queue. Meaning we have as many entries per album as there are tracks in the queue
	playlist="$(mpc $argarray -f '%albumartist% - %album%' playlist)"
	# Split by newline
	readarray -t splitted <<<"$playlist"
	# Get the index of the currently playing track
	i="$(mpc $argarray -f %position% current)"
	# Get the album of the currently playing track
	current="$(mpc $argarray -f '%albumartist% - %album%' current)"
	# Calculate how many tracks there are
	max=$(( ${#splitted[@]} ))
	finished=False
	# Now we loop up, for loops are wonky so while
	while [[ $i -lt $max && $finished = False ]]
	do
		# Get the album at this index
		album="${splitted[i]}"
		# As long as the album for this track is the same as the one for the current track, keep counting
		if [[ "$current" = "$album" ]]; then
			let "i++"
		else
			finished=True
		fi
	done
	let "i++"
	# Play the track at 1 higher than the last track in the album
	mpc $argarray play "$i"
	if [[ $clear = True ]]; then
		# To clear, we simply keep removing tracks from the queue until we reach 0
		j=$i
		let "j--"
		while [[ $j -gt 0 ]]
		do
			mpc $argarray del "$j"
			let "j--"
		done
	fi
}

prev() {
	playlist="$(mpc $argarray -f '%albumartist% - %album%' playlist)"
	readarray -t splitted <<<"$playlist"
	i="$(mpc $argarray -f %position% current)"
	let "i--"
	prev="${splitted[i]}"
	finished=False
	while [[ $finished = False ]]
	do
		album="${splitted[i]}"
		if [[ "$prev" = "$album" ]]; then
			let "i--"
		else
			finished=True
		fi
	done
	if [[ $i -lt 1 ]]; then
		i=1
	fi
	mpc $argarray play "$i"

}

crop() {
	playlist="$(mpc $argarray -f '%albumartist% - %album%' playlist)"
	readarray -t splitted <<<"$playlist"
	i="$(mpc $argarray -f %position% current)"
	let "i--"
	curr=${splitted[i]}
	j=$i
	counter=$j
	max=$(( ${#splitted[@]} ))
	while [[ $j -le $max ]]
	do
		album="${splitted[$j]}"
		if [[ "$album" != "$curr" ]]; then
			mpc $argarray del "$counter"
		else
			let "counter++"
		fi
		let "j++"
	done
	j=$i
	while [[ $j -gt 0 ]]
	do
		album="${splitted[$j]}"
		if [[ "$album" != "$curr" ]]; then
			mpc $argarray del "$j"
		fi
		let "j--"
	done
}

playlist() {
	playlist="$(mpc $argarray -f '%albumartist% - %album%' playlist)"
	readarray -t splitted <<<"$playlist"
	declare -A seen
	uniq=()
	for album in "${splitted[@]}"; do
		[[ ${seen[$album]} ]] && continue
		uniq+=( "$album" )
		seen[$album]=x
	done
	printf '%s\n' "${uniq[@]}"
}

current() {
	echo "$(mpc $argarray -f '%albumartist% - %album%' current)"
}

play() {
	index="$1"
	if [[ $index -lt 1 ]]; then
		index=1
	fi
	playlist="$(mpc $argarray -f '%albumartist% - %album%' playlist)"
	readarray -t splitted <<<"$playlist"
	i=0
	newIndex=0
	prev=""
	while [[ $i -lt $index ]]
	do
		album="${splitted[i]}"
		if [[ "$album" != "$prev" ]]; then
			let "i++"
		fi
		let "newIndex++"
	done
	mpc $argarray play "$newIndex"
	if [[ $clear = True ]]; then
		j=$newIndex
		let "j--"
		while [[ $j -gt 0 ]]
		do
			mpc $argarray del "$j"
			let "j--"
		done
	fi
}

queue() {
	playlist="$(mpc $argarray -f '%albumartist% - %album%' playlist)"
	readarray -t splitted <<<"$playlist"
	current="$(mpc $argarray -f '%albumartist% - %album%' current)"
	next=""
	for album in "${splitted[@]}"; do
		if [[ "$album" != "$current" ]]; then
			next="$album"
			break
		fi
	done
	echo "$next"
}

help() {
	# Should probably write a better help but w/e
	echo "Usage: mpa <command> [options]"
	echo "Read the README for more info"
}

i=0

opt="$1"

if [[ $* = *-c ]]; then
	clear=True
fi

case "$opt" in
	random) rand "$2" "$3" ;;
	next) next ;;
	playlist) playlist ;;
	current) current ;;
	queued) queue ;;
	play) play $2 ;;
	crop) crop ;;
	radio) radio "$2" "$3" ;;
	-h) help ;;
	*) mpc $argarray "$@" ;;
esac
